"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactSlick = _interopRequireDefault(require("react-slick"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Arrow = _interopRequireWildcard(require("./Arrow"));

var _ChevronLeft = _interopRequireDefault(require("../Icons/ChevronLeft"));

var _ChevronRight = _interopRequireDefault(require("../Icons/ChevronRight"));

var _constants = require("../constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var TRANSITION_FADE = 'fade';
var TRANSITION_SLIDE = 'slide';

var Carousel =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(Carousel, _PureComponent);

  function Carousel(props) {
    var _this;

    _classCallCheck(this, Carousel);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Carousel).call(this, props));

    _defineProperty(_assertThisInitialized(_this), "arrowContainerRef", _react["default"].createRef());

    _defineProperty(_assertThisInitialized(_this), "state", {
      initialized: false
    });

    _defineProperty(_assertThisInitialized(_this), "handleInit", function () {
      return _this.setState({
        initialized: true
      });
    });

    _this.slider = props.sliderRef || _react["default"].createRef();
    return _this;
  }

  _createClass(Carousel, [{
    key: "render",
    value: function render() {
      var _cn;

      var _this$props = this.props,
          autoPlay = _this$props.autoPlay,
          centered = _this$props.centered,
          children = _this$props.children,
          className = _this$props.className,
          controls = _this$props.controls,
          dots = _this$props.dots,
          focusOnSelect = _this$props.focusOnSelect,
          highlightOnActive = _this$props.highlightOnActive,
          highlightOnHover = _this$props.highlightOnHover,
          loop = _this$props.loop,
          peek = _this$props.peek,
          scrollCount = _this$props.scrollCount,
          showCount = _this$props.showCount,
          transition = _this$props.transition,
          variableWidth = _this$props.variableWidth,
          color = _this$props.color,
          restProps = _objectWithoutProperties(_this$props, ["autoPlay", "centered", "children", "className", "controls", "dots", "focusOnSelect", "highlightOnActive", "highlightOnHover", "loop", "peek", "scrollCount", "showCount", "transition", "variableWidth", "color"]);

      var initialized = this.state.initialized;
      var containerClasses = (0, _classnames["default"])({
        'mc-carousel': true,
        'mc-carousel--centered': centered,
        'mc-carousel--highlight-active': highlightOnActive,
        'mc-carousel--highlight-hover': highlightOnHover,
        'mc-carousel--dots': dots
      });
      var carouselClasses = (0, _classnames["default"])((_cn = {}, _defineProperty(_cn, className, className), _defineProperty(_cn, 'mc-carousel__slider', true), _cn));
      var showCountWithVariable = variableWidth ? 1 : showCount;
      var adjustedShowCount = peek ? showCountWithVariable + 0.75 : showCountWithVariable;
      var lazyLoad = variableWidth ? false : 'ondemand';
      var peekStyles = peek ? {
        position: 'absolute',
        right: -16,
        top: 0,
        width: '120px',
        height: '100%',
        background: "\n          linear-gradient(\n            to left,\n            rgba(".concat(color, ", 1) 0,\n            rgba(").concat(color, ", 0) 100%\n          ) center no-repeat\n        "),
        zIndex: 1,
        pointerEvents: 'none'
      } : {};
      var arrowsProps = controls && initialized ? {
        arrows: true,
        prevArrow: _react["default"].createElement(_Arrow["default"], {
          direction: _Arrow.DIRECTION_PREV,
          location: this.arrowContainerRef.current
        }, _react["default"].createElement(_ChevronLeft["default"], null)),
        nextArrow: _react["default"].createElement(_Arrow["default"], {
          direction: _Arrow.DIRECTION_NEXT,
          location: this.arrowContainerRef.current
        }, _react["default"].createElement(_ChevronRight["default"], null))
      } : {
        arrows: false
      };
      var dotsProps = dots ? {
        dots: true,
        customPaging: function customPaging() {
          return _react["default"].createElement("button", null);
        }
      } : {
        dots: false
      };
      return _react["default"].createElement("div", {
        className: containerClasses
      }, _react["default"].createElement("div", {
        className: "mc-carousel__forced-spacing"
      }), _react["default"].createElement("div", {
        className: "mc-carousel__container"
      }, _react["default"].createElement("div", {
        className: "mc-carousel__inner-container"
      }, _react["default"].createElement("div", {
        className: "mc-carousel__slider-container"
      }, _react["default"].createElement(_reactSlick["default"], _extends({
        autoplay: autoPlay,
        className: carouselClasses,
        centerMode: centered,
        centerPadding: 0,
        fade: transition === TRANSITION_FADE,
        focusOnSelect: focusOnSelect,
        ref: this.slider,
        slidesToScroll: scrollCount,
        slidesToShow: adjustedShowCount,
        infinite: loop,
        draggable: false,
        variableWidth: variableWidth,
        onInit: this.handleInit,
        lazyLoad: lazyLoad
      }, arrowsProps, dotsProps, restProps), children)), peek && _react["default"].createElement("div", {
        style: peekStyles
      }), _react["default"].createElement("div", {
        className: "mc-carousel__arrow-container",
        ref: this.arrowContainerRef
      }))), _react["default"].createElement("div", {
        className: "mc-carousel__forced-spacing"
      }));
    }
  }]);

  return Carousel;
}(_react.PureComponent);

exports["default"] = Carousel;

_defineProperty(Carousel, "propTypes", {
  autoPlay: _propTypes["default"].bool,
  centered: _propTypes["default"].bool,
  children: _constants.PROP_TYPE_CHILDREN,
  className: _propTypes["default"].string,
  controls: _propTypes["default"].bool,
  dots: _propTypes["default"].bool,
  focusOnSelect: _propTypes["default"].bool,
  highlightOnActive: _propTypes["default"].bool,
  highlightOnHover: _propTypes["default"].bool,
  initialSlide: _propTypes["default"].number,
  loop: _propTypes["default"].bool,
  peek: _propTypes["default"].bool,
  scrollCount: _propTypes["default"].number,
  showCount: _propTypes["default"].number,
  sliderRef: _propTypes["default"].func,
  transition: _propTypes["default"].string,
  variableWidth: _propTypes["default"].bool,
  color: _propTypes["default"].string
});

_defineProperty(Carousel, "defaultProps", {
  autoPlay: false,
  centered: false,
  controls: false,
  focusOnSelect: false,
  highlightOnActive: false,
  highlightOnHover: false,
  loop: false,
  scrollCount: 1,
  showCount: 3,
  transition: TRANSITION_SLIDE,
  variableWidth: false,
  color: '0, 0, 0'
});