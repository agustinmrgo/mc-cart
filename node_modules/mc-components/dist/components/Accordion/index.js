"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _isArray = _interopRequireDefault(require("lodash/isArray"));

var _isFunction = _interopRequireDefault(require("lodash/isFunction"));

var _times = _interopRequireDefault(require("lodash/times"));

var _classnames = _interopRequireDefault(require("classnames"));

var _HoverHandler = _interopRequireDefault(require("../HoverHandler"));

var _constants = require("../constants");

var _helpers = require("../helpers");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Accordion =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(Accordion, _PureComponent);

  function Accordion() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Accordion);

    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Accordion)).call.apply(_getPrototypeOf2, [this].concat(_args)));

    _defineProperty(_assertThisInitialized(_this), "state", {
      intent: false,
      hovering: false
    });

    _defineProperty(_assertThisInitialized(_this), "mapChildren", function (children, mapFn) {
      if ((0, _isArray["default"])(children) && (0, _isFunction["default"])(children[0])) {
        return children.map(mapFn);
      }

      return _react.Children.map(children, mapFn);
    });

    _defineProperty(_assertThisInitialized(_this), "handleHoverChange", function (args) {
      var on = _this.props.on;
      var value = args[on];
      if (typeof value === 'undefined') return;

      _this.setState(_defineProperty({}, on, value));
    });

    return _this;
  }

  _createClass(Accordion, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          aspectRatio = _this$props.aspectRatio,
          children = _this$props.children,
          className = _this$props.className,
          on = _this$props.on,
          showCount = _this$props.showCount,
          restProps = _objectWithoutProperties(_this$props, ["aspectRatio", "children", "className", "on", "showCount"]);

      var parentActive = this.state[on];

      var parentClasses = function parentClasses(active) {
        var _cn;

        return (0, _classnames["default"])((_cn = {}, _defineProperty(_cn, className, className), _defineProperty(_cn, 'mc-accordion', true), _defineProperty(_cn, 'mc-accordion--active', active), _defineProperty(_cn, "mc-accordion--".concat(aspectRatio), aspectRatio), _cn));
      };

      var itemClasses = function itemClasses(active) {
        return (0, _classnames["default"])({
          'mc-accordion__item': true,
          'mc-accordion__item--active': active
        });
      };

      var countedChildren = (0, _times["default"])(showCount).map(function (v, i) {
        return children[i];
      });
      return _react["default"].createElement("div", _extends({
        className: parentClasses(parentActive)
      }, restProps), _react["default"].createElement("div", {
        className: "mc-accordion__content"
      }, this.mapChildren(countedChildren, function (child, key) {
        return _react["default"].createElement(_react.Fragment, {
          key: key
        }, child && _react["default"].createElement(_HoverHandler["default"], {
          onChange: _this2.handleHoverChange,
          nowrap: true
        }, function (_ref) {
          var itemActive = _ref[on],
              itemProps = _ref.props;
          return _react["default"].createElement("div", _extends({
            className: itemClasses(itemActive)
          }, itemProps), (0, _helpers.renderChildren)(child, {
            itemActive: itemActive,
            parentActive: parentActive
          }));
        }), !child && _react["default"].createElement("div", {
          className: itemClasses()
        }));
      })));
    }
  }]);

  return Accordion;
}(_react.PureComponent);

exports["default"] = Accordion;

_defineProperty(Accordion, "propTypes", {
  aspectRatio: _propTypes["default"].oneOf(_helpers.ASPECT_RATIOS),
  children: _constants.PROP_TYPE_CHILDREN,
  className: _propTypes["default"].string,
  on: _propTypes["default"].oneOf(['hovering', 'intent']),
  showCount: _propTypes["default"].number
});

_defineProperty(Accordion, "defaultProps", {
  aspectRatio: '21x9',
  on: 'hovering',
  showCount: 4
});