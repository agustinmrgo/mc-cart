"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactDom = require("react-dom");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Dropdown = require("../Dropdown");

var _ClickOutside = _interopRequireDefault(require("../ClickOutside"));

var _Backdrop = _interopRequireDefault(require("../Backdrop"));

var _Icons = _interopRequireDefault(require("../Icons"));

var _constants = require("../constants");

var _helpers = require("../helpers");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var DropdownContentControlled =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(DropdownContentControlled, _PureComponent);

  function DropdownContentControlled() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, DropdownContentControlled);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DropdownContentControlled)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "state", {
      checkedInvert: false,
      inverted: false
    });

    _defineProperty(_assertThisInitialized(_this), "placeholder", _react["default"].createRef());

    _defineProperty(_assertThisInitialized(_this), "handleClose", function (source) {
      return function (event) {
        var _this$props = _this.props,
            show = _this$props.show,
            onClose = _this$props.onClose;

        if (!show) {
          return;
        }

        onClose(source, event);
      };
    });

    _defineProperty(_assertThisInitialized(_this), "renderDropdown", function () {
      var _this$props2 = _this.props,
          children = _this$props2.children,
          className = _this$props2.className,
          show = _this$props2.show,
          props = _objectWithoutProperties(_this$props2, ["children", "className", "show"]);

      var inverted = _this.state.inverted;
      var classes = (0, _classnames["default"])(_defineProperty({
        'mc-dropdown': true,
        'mc-dropdown--active': show,
        'mc-invert': inverted
      }, className, className));
      return _react["default"].createElement(_Dropdown.Consumer, null, function (_ref) {
        var attributes = _ref.attributes,
            dropdownRef = _ref.dropdownRef,
            styles = _ref.styles;
        return _react["default"].createElement(_ClickOutside["default"], {
          divRef: dropdownRef,
          onClickOutside: _this.handleClose('outside')
        }, _react["default"].createElement("div", _extends({
          role: "dropdown",
          className: classes,
          ref: dropdownRef,
          style: styles
        }, attributes, props), _react["default"].createElement(_Backdrop["default"], {
          className: "mc-dropdown__backdrop",
          kind: 'dark'
        }), _react["default"].createElement("div", {
          className: "mc-dropdown__content-container"
        }, _react["default"].createElement("div", {
          className: "d-block d-sm-none mc-dropdown__close"
        }, _react["default"].createElement("a", {
          className: "d-inline-block mc-p-2",
          onClick: _this.handleClose('close')
        }, _react["default"].createElement(_Icons["default"], {
          kind: "close",
          className: "mc-dropdown__close-icon"
        }))), _react["default"].createElement("div", {
          className: "mc-dropdown__content"
        }, children))));
      });
    });

    return _this;
  }

  _createClass(DropdownContentControlled, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var placeholder = this.placeholder && this.placeholder.current;

      if ((0, _helpers.getClosest)(placeholder, '.mc-invert')) {
        this.setState({
          inverted: true
        });
      }

      this.setState({
        checkedInvert: true
      });
      this.toggleHtmlClassName(this.props.show);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.toggleHtmlClassName(this.props.show);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.toggleHtmlClassName(false);
    }
  }, {
    key: "toggleHtmlClassName",
    value: function toggleHtmlClassName(isShown) {
      var rootHtml = document.getElementsByTagName('html')[0];

      if (!isShown) {
        rootHtml.classList.remove('mc-dropdown__html--open');
      } else {
        rootHtml.classList.add('mc-dropdown__html--open');
      }
    }
  }, {
    key: "render",
    value: function render() {
      var checkedInvert = this.state.checkedInvert;
      return _react["default"].createElement(_react.Fragment, null, !checkedInvert && _react["default"].createElement("div", {
        ref: this.placeholder
      }), (0, _reactDom.createPortal)(this.renderDropdown(), document.body));
    }
  }]);

  return DropdownContentControlled;
}(_react.PureComponent);

exports["default"] = DropdownContentControlled;

_defineProperty(DropdownContentControlled, "propTypes", {
  children: _constants.PROP_TYPE_CHILDREN,
  className: _propTypes["default"].string,
  inverted: _propTypes["default"].bool,
  show: _propTypes["default"].bool,
  onClose: _propTypes["default"].func
});

_defineProperty(DropdownContentControlled, "defaultProps", {
  onClose: function onClose() {}
});