"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactDom = require("react-dom");

var _reactTransitionGroup = require("react-transition-group");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _FullscreenHandler = _interopRequireDefault(require("../FullscreenHandler"));

var _constants = require("../constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var getOrCreateToaster = function getOrCreateToaster(parentNode) {
  var toaster;
  var existingToaster = document.querySelectorAll('.mc-toaster');

  if (existingToaster.length) {
    var _existingToaster = _slicedToArray(existingToaster, 1);

    toaster = _existingToaster[0];
    var existingParent = toaster.parentNode;

    if (existingParent !== parentNode) {
      existingParent.removeChild(toaster);
      parentNode.appendChild(toaster);
    }
  } else {
    toaster = document.createElement('div');
    toaster.className = 'mc-toaster';
    parentNode.appendChild(toaster);
  }

  return toaster;
};

var Toast =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(Toast, _PureComponent);

  function Toast() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Toast);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Toast)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "state", {
      show: false
    });

    _defineProperty(_assertThisInitialized(_this), "containerRef", _react["default"].createRef());

    _defineProperty(_assertThisInitialized(_this), "show", function () {
      _this.setState({
        height: _this.containerRef.current.offsetHeight,
        show: true
      });

      _this.timer = window.setTimeout(_this.hide, 6000);
    });

    _defineProperty(_assertThisInitialized(_this), "hide", function () {
      _this.setState({
        show: false
      });
    });

    _defineProperty(_assertThisInitialized(_this), "endListener", function (node, done) {
      node.addEventListener('transitionend', done, false);
    });

    _defineProperty(_assertThisInitialized(_this), "pauseHide", function () {
      window.clearTimeout(_this.timer);
    });

    _defineProperty(_assertThisInitialized(_this), "resumeHide", function () {
      if (_this.state.show) {
        _this.show();
      }
    });

    return _this;
  }

  _createClass(Toast, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.show) {
        this.show();
      }

      if (this.containerRef.current) {
        this.setState({
          height: this.containerRef.current.offsetHeight
        });
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (this.props.show && this.props.show !== prevProps.show) {
        this.show();
      }

      if (!this.props.show && this.props.show !== prevProps.show) {
        this.hide();
      }
    }
  }, {
    key: "renderToast",
    value: function renderToast() {
      var _cn;

      var _this$props = this.props,
          children = _this$props.children,
          className = _this$props.className,
          kind = _this$props.kind;
      var _this$state = this.state,
          height = _this$state.height,
          show = _this$state.show;
      var classNames = (0, _classnames["default"])((_cn = {
        'mc-toast': true,
        'mc-toast--appear': show
      }, _defineProperty(_cn, "mc-toast--".concat(kind), kind), _defineProperty(_cn, className, className), _cn));
      return _react["default"].createElement(_reactTransitionGroup.CSSTransition, {
        addEndListener: this.endListener,
        classNames: "mc-toast-",
        "in": show
      }, _react["default"].createElement("div", {
        className: classNames,
        onMouseOver: this.pauseHide,
        onMouseOut: this.resumeHide,
        style: {
          height: height
        }
      }, _react["default"].createElement("div", {
        className: "mc-toast__container",
        ref: this.containerRef
      }, _react["default"].createElement("div", {
        className: "mc-toast__content"
      }, children))));
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      return _react["default"].createElement(_FullscreenHandler["default"], null, function (_ref) {
        var fullscreenElement = _ref.fullscreenElement;
        return (0, _reactDom.createPortal)(_this2.renderToast(), getOrCreateToaster(fullscreenElement || document.body));
      });
    }
  }]);

  return Toast;
}(_react.PureComponent);

exports["default"] = Toast;

_defineProperty(Toast, "propTypes", {
  children: _constants.PROP_TYPE_CHILDREN,
  className: _propTypes["default"].string,
  kind: _propTypes["default"].oneOf(['default', 'success', 'error']),
  show: _propTypes["default"].bool
});

_defineProperty(Toast, "defaultProps", {
  kind: 'default'
});