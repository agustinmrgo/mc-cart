"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.Consumer = exports.Provider = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactDom = require("react-dom");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Backdrop = _interopRequireDefault(require("../Backdrop"));

var _FullscreenHandler = _interopRequireDefault(require("../FullscreenHandler"));

var _constants = require("../constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var ModalContext = _react["default"].createContext('modal');

var Provider = ModalContext.Provider,
    Consumer = ModalContext.Consumer;
exports.Consumer = Consumer;
exports.Provider = Provider;

var Modal =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(Modal, _PureComponent);

  function Modal() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, Modal);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Modal)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "onKeyDown", function (event) {
      if (event.keyCode === 27) {
        _this.close('escape')(event);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "close", function (source) {
      return function (event) {
        var onClose = _this.props.onClose;

        if (onClose) {
          event.preventDefault();
          event.stopPropagation();
          onClose(source, event);
        }
      };
    });

    _defineProperty(_assertThisInitialized(_this), "container", _react["default"].createRef());

    _defineProperty(_assertThisInitialized(_this), "renderModal", function () {
      var _cn;

      var _this$props = _this.props,
          backdrop = _this$props.backdrop,
          children = _this$props.children,
          className = _this$props.className,
          size = _this$props.size;
      var classes = (0, _classnames["default"])((_cn = {
        'mc-modal': true
      }, _defineProperty(_cn, "mc-modal--".concat(size), size), _defineProperty(_cn, className, className), _cn));
      return _react["default"].createElement(Provider, {
        value: {
          close: _this.close
        }
      }, _react["default"].createElement("div", {
        className: classes,
        onKeyDown: _this.onKeyDown,
        ref: _this.container
      }, _react["default"].createElement(_Backdrop["default"], {
        className: "mc-modal__backdrop",
        kind: backdrop
      }), _react["default"].createElement("div", {
        className: "mc-modal__viewport"
      }, _react["default"].createElement("div", {
        className: "container"
      }, children))));
    });

    _defineProperty(_assertThisInitialized(_this), "getRootNode", function (fullscreenElement) {
      var rootNode;

      if (fullscreenElement && fullscreenElement.closest('.mc-modal') !== _this.container.current) {
        rootNode = fullscreenElement;
      } else {
        rootNode = document.body;
      }

      return rootNode;
    });

    return _this;
  }

  _createClass(Modal, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var show = this.props.show;

      if (show) {
        var rootHtml = document.getElementsByTagName('html')[0];
        rootHtml.classList.add('mc-modal__html--open');
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var rootHtml = document.getElementsByTagName('html')[0];
      rootHtml.classList.remove('mc-modal__html--open');
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var show = this.props.show;
      var rootHtml = document.getElementsByTagName('html')[0];

      if (!prevProps.show && show) {
        rootHtml.classList.add('mc-modal__html--open');
      } else if (prevProps.show && !show) {
        rootHtml.classList.remove('mc-modal__html--open');
      }

      if (show) {
        var elem = this.container.current;
        window.setTimeout(function () {
          elem.scrollTop = 0;
        }, 0);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      if (!this.props.show) return null;

      if (this.props.appendToBody) {
        return _react["default"].createElement(_FullscreenHandler["default"], null, function (_ref) {
          var fullscreenElement = _ref.fullscreenElement;
          return (0, _reactDom.createPortal)(_this2.renderModal(), _this2.getRootNode(fullscreenElement));
        });
      }

      return this.renderModal();
    }
  }]);

  return Modal;
}(_react.PureComponent);

exports["default"] = Modal;

_defineProperty(Modal, "propTypes", {
  backdrop: _propTypes["default"].oneOf(['dark', 'extra-dark']),
  children: _constants.PROP_TYPE_CHILDREN.isRequired,
  className: _propTypes["default"].string,
  closeButton: _propTypes["default"].bool,
  show: _propTypes["default"].bool,
  size: _propTypes["default"].oneOf(['small', 'medium', 'large', 'full']),
  appendToBody: _propTypes["default"].bool,
  onClose: _propTypes["default"].func
});

_defineProperty(Modal, "defaultProps", {
  appendToBody: true,
  backdrop: 'dark',
  size: 'full'
});